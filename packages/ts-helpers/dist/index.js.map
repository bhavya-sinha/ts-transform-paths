{"version":3,"file":"index.js","sources":["../src/Tokenizer.ts","../src/ImportPathsResolver.ts","../src/Replacer.ts","../src/createTraverseVisitor.ts"],"sourcesContent":["export function regExpEscape(s: string): string {\n    return s.replace(/[\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n}\n\nexport class Tokenizer {\n    mask: RegExp\n    tokens: RegExp[]\n    subs: string[]\n\n    constructor(\n        pathKey: string,\n        subs: string[],\n        tokens: string[] = ['*']\n    ) {\n        this.subs = subs\n        this.tokens = []\n        const tokenMask = new RegExp(`(${tokens.map(regExpEscape).join('|')})`, 'g')\n        const mask = pathKey.replace(tokenMask, token => {\n            this.tokens.push(new RegExp(regExpEscape(token), 'g'))\n            return '><'\n        })\n\n        this.mask = new RegExp('^' + regExpEscape(mask).replace(/\\>\\</g, '(?!\\\\.\\\\/)(.*)') + '$')\n    }\n\n    parse(str: string): string[] | void {\n        const {mask, tokens, subs} = this\n        const match = str.match(mask)\n        if (match) {\n            const parsedSubs: string[] = []\n            for (let sub of subs) {\n                for (let i = 1; i < match.length; i++) {\n                    const token = tokens[i - 1]\n                    const replacement = match[i]\n                    sub = sub.replace(token, replacement)\n                }\n                parsedSubs.push(sub)\n            }\n            return parsedSubs\n        }\n    }\n}\n","import * as path from 'path'\nimport {Tokenizer, regExpEscape} from './Tokenizer'\n\nexport interface TSOptions {\n    paths?: Record<string, string[]>\n    baseUrl?: string\n    exclude?: string[] | undefined\n}\n\nexport const winSepRegex = new RegExp(regExpEscape(path.sep), 'g')\nexport const posixSepRegex = /\\//g\n\nexport class ImportPathsResolver {\n    private tokenizers: Tokenizer[]\n    protected baseUrl: string\n\n    constructor(\n        opts: TSOptions\n    ) {\n        const paths = opts.paths || {}\n        const baseUrl = this.baseUrl = opts.baseUrl ? opts.baseUrl.replace(winSepRegex, '\\/') : ''\n\n        const mapBaseUrl: ((v: string) => string) | undefined = baseUrl\n            ? sub => (sub[0] === '/'\n                ? sub\n                : `${baseUrl}/${sub.substring(0, 2) === './' ? sub.substring(2) : sub}`\n            )\n            : undefined\n\n        this.tokenizers = Object.keys(paths)\n            .filter(key => !opts.exclude || !opts.exclude.includes(key))\n            .map(key => new Tokenizer(\n                key,\n                mapBaseUrl ? paths[key].map(mapBaseUrl) : paths[key]\n            ))\n    }\n\n    getImportSuggestions(oldImport: string, fileName: string): string[] | undefined {\n        if (isRelative(oldImport)) return\n\n        for (let tokenizer of this.tokenizers) {\n            const match = tokenizer.parse(oldImport)\n            if (match) {\n                return match.map(p => {\n                    const newPath = path.relative(\n                        fileName,\n                        p.replace(posixSepRegex, path.sep)\n                    ).replace(winSepRegex, '\\/')\n\n                    return isRelative(newPath) ? newPath : ('./' + newPath)\n                })\n            }\n        }\n\n        const defaultPath = path.relative(fileName, this.baseUrl + '/' + oldImport).replace(winSepRegex, '\\/')\n\n        return [ isRelative(defaultPath) ? defaultPath : ('./' + defaultPath) ]\n    }\n}\n\nfunction isRelative(fileName: string) {\n  return fileName === '.' || fileName.startsWith('./') || fileName.startsWith('../')\n}\n","import * as ts from 'typescript'\n\nexport interface ReplacerItem extends ts.TextSpan {\n    start: number\n    length: number\n    replacement: string\n}\n\nexport class Replacer {\n    private items: ReplacerItem[] = []\n    constructor(private sourceText: string) {}\n\n    push(item: ReplacerItem) {\n        this.items.push(item)\n    }\n\n    getReplaced(): void | string {\n        const {items, sourceText} = this\n        if (items.length === 0) return\n        let result = ''\n        let pos = 0\n        for (let item of items) {\n            result += sourceText.substring(pos, item.start) + item.replacement\n            pos = item.start + item.length\n        }\n        result += sourceText.substring(pos)\n\n        return result\n    }\n}\n","import ts from 'typescript'\n\nexport type TraverseVisitor<VisitorContext> = (\n    node: ts.Node,\n    visitorContext: VisitorContext\n) => ts.VisitResult<ts.Node> | undefined\n\nexport function createTraverseVisitor<VisitorContext>(\n    traverseVisitor: TraverseVisitor<VisitorContext>,\n    visitorContext: VisitorContext,\n    ctx: ts.TransformationContext\n): ts.Visitor {\n    return function visitor(node: ts.Node): ts.VisitResult<ts.Node> {\n        return traverseVisitor(node, visitorContext) || ts.visitEachChild(node, visitor, ctx)\n    }\n}\n"],"names":["path.sep","path.relative"],"mappings":"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"}